<?xml version="1.0"?><!DOCTYPE html><xhtml:html  xmlns:ax="abc" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xh="http://www.w3.org/1999/xhtml"><xhtml:head ><xhtml:meta  content="xml" name="Keywords"></xhtml:meta><xhtml:title >Insert Content</xhtml:title><xhtml:meta  content="width=device-width, initial-scale=1" name="viewport"></xhtml:meta><xhtml:style  type="text/css">
  body {color:blue;}  
  p  {line-height=130%;}
  h1 {text-align:center;}
  h2 {text-align:center;}
  h3 {text-align:center;}
  pre { color:#800080;}
  a:link {color:#0000FF;}
  a:visited {color:#C0C000;}
  nav {
  background-image:url(images/grgcleft2.png);
  position: absolute;
  top :0px;
  bottom:0;
  left: 0;
  width: 240px;
}
  section {
  position: relative;
  margin-left: 250px;
}
</xhtml:style></xhtml:head><xhtml:body ><xhtml:nav ><xhtml:h2 >Contact</xhtml:h2><xhtml:ul ><xhtml:li >Phone: 027 2203796</xhtml:li><xhtml:li ><xhtml:a  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude" href="mailto:tony@tony.gen.nz">Email: tony@tony.gen.nz</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="index.xhtml">Home Page</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="intro.xhtml">intro</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="whatsxml.xhtml">whatsxml</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="xmlproc.xhtml">Xml processing</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="namespaces.xhtml">namespaces</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="xpath.xhtml">xpath</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="xslt.xhtml">xslt</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="static.xhtml">static site</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="validation.xhtml">Validation</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="splitpages.xhtml">split_pages</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="insert.xhtml">insert_content</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="build.xhtml">build</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="futuredev.xhtml">FutureDev</xhtml:a></xhtml:li><xhtml:li ><xhtml:a  href="rest.xhtml">REST Resources</xhtml:a></xhtml:li></xhtml:ul></xhtml:nav><xhtml:section ><xhtml:a  href="index.xhtml"><xhtml:img  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude" src="images/hw.png" left="250px" width="100%"></xhtml:img></xhtml:a><xhtml:br ></xhtml:br><xhtml:h2  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude">Inserting Content</xhtml:h2><xhtml:p  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude">Xml include is used to copy pages into the XML dataset at
appropriate places.  This is done in the <xhtml:a  href="static.html#xslt_extn">xslt_extn</xhtml:a> sax parser.</xhtml:p><xhtml:h3  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude">Xml insert code</xhtml:h3><xhtml:pre  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude">
insert_file_xml(Filename,State) -&gt;
    {ok,I} = maps:find(fileinclusions,State),
    State2 = case ordsets:is_element(Filename,I) of
	true -&gt;
	    throw(&quot;recursive xinclude on file &quot;++Filename);
	false -&gt;
	    State#{fileinclusions =&gt; ordsets:add_element(Filename,I)}
    end,
    {ok,Str} = file:read_file(Filename),
    erlsom:parse_sax(Str,State2,fun doevent/2).
</xhtml:pre><xhtml:p  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude">
The bit of the insert_file_xml that does the work are the two lines at the bottom that read the file and then recursively call the erlsom:parse_sax procedure.  This allows xml file inclusions to be nested.</xhtml:p><xhtml:h3  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude">Text insert code</xhtml:h3><xhtml:pre  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude">
-spec insert_file_text(string(), integer()) -&gt; ok.
insert_file_text(Filename,FD) -&gt; 
    {ok,Str} = file:read_file(Filename),
    Str2 = xml_output_escaping(binary_to_list(Str)),
    io:fwrite(FD,&quot;~s&quot;,[&quot;&lt;pre&gt;&quot;]),
    io:fwrite(FD,&quot;~s&quot;,[Str2]),
    io:fwrite(FD,&quot;~s&quot;,[&quot;&lt;/pre&gt;&quot;]).
    </xhtml:pre><xhtml:p  xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xi="http://www.w3.org/2001/XInclude">
This code reads the file, escapes all the xml characters, and writes it to output inside some &lt;pre&gt; tags to preserve the file formatting.
</xhtml:p></xhtml:section></xhtml:body></xhtml:html>