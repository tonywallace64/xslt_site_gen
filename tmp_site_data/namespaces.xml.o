<page>
  <name>namespaces</name>
  <title>Namespaces</title>
  <url>namespaces.html</url>
  <keywords>xml</keywords>
  <pageheader>Greenrose</pageheader>
<content>
<p>This, the third stop in our sojourn in XML is about name spaces.
Up until now we have been inventing tagnames that suit us without
regard to what other are doing.  In order to share data around the
web everyone needs to be able to make their names unique, and this
is the purpose of namespaces.</p>
<p>In XML we leaverage off the uniqueness of URI identifiers to
form a scheme where XML authors can be confident of the uniqueness
of the names they use.  These unique names are called expanded names.</p>
<p>The abstract for the XML Namespaces standard succintly puts it: &quot;XML namespaces provide a simple method for qualifying element and attribute names used in Extensible Markup Language documents by associating them with namespaces identified by IRI references.&quot;</p>
<p>These namespaces are defined by xmlns attributes and attributes from the xmlns namespace.  For example:
<![CDATA[
<root xmlns:xf="http://www.w3.org/2002/xforms"]]>
associates all tag and attributes starting with "xf:" to the xforms namespace.
This marks such tags and attributes as being part of the xforms.  An xforms
model element is thus specified as:
<![CDATA[
<xf:model>
]]></p>
<p>These namespaces allow different xml languages with different semantics
to be freely mixed in a single document.  To use xforms still requires an xforms processor to be installed on your system.</p>
<p>The name xf:model is an example of a <em>qualified name</em>.  A unique identifier is generated by expanding the prefix (in this case "xf") by its associated string (in this case "http://www.w3.org/2002/xforms".  The resulting name is called an <em>expanded name</em>.</p>
<p>This namespace mechanism allows xml tools to be extended in a modular fashion.</p>
</content>
</page>
