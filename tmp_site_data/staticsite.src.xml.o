<page xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:ax="abc">
  <name>static site</name>
  <title>static site</title>
  <url>static.html</url>
  <keywords>xml</keywords>
  <pageheader>Greenrose</pageheader>
<content>
<h2>Why  build a site this way?</h2>
<p>In this lesson we will build a site with static content
using the tools we have learnt thus far.  Why do it this way?
A website can be viewed as an organised collection of pages.</p>
<p>Editing pages on an adhoc basis can lead to inconsistency
between pages.  This is partially overcome using shared css 
stylesheets, however this does not model the relationship 
between the pages.  Xml can model the relationship between
the web pages, be they nested or disjoint sets.</p>


<h2>This site master file</h2>

<pre>
<xi:xinclude href="pagedata.xml" parse="text"/>
</pre>

<h2>An XSLT utility file</h2>
This is one of two files for converting this site data into html.
<pre>
<xi:xinclude href="ajw_utils.xsl" parse="text"/>
</pre>

<h2>XSLT file to generate HTML</h2>
This file generates each web page including navigation bar.
<ax:quote_include href="make_web.xsl"/>

<h2>An erlang script to split the generated HTML into multiple files</h2>


<h2>A build script to put it all together</h2>
<!-- quote_include only works for xml files so this is manually copied -->
<pre>
PAGEDATA=pagedata.xml
xsltproc ajw_utils.xsl staticsite.src.xml &gt; staticsite.xml
xmllint -xinclude pagedata.xml &gt; tmp1
xsltproc make_web.xsl tmp1 &gt; tmp2 
escript splitpages.escript &lt; tmp2
cp *.html html/ 
</pre>




</content>
</page>
